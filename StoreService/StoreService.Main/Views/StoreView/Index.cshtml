@using BarsGroupProjectN1.Core.Models.Store
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model IndexViewModel

@{
    Layout = "_Layout";
    ViewData["Title"] = "–ü—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ";
}

<div class="container mt-5">
    <h1 class="text-center mb-4">
        –ü—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ üè™
        <p>–ó–∞–∫–∞–∑–æ–≤: @Model.Store.ActiveOrdersCount</p>
        <span id="store-status" class="badge badge-@(Model.Store.Status == StoreStatus.Open ? "success" : "danger") ml-2">
            @(Model.Store.Status == StoreStatus.Open ? "–í —Ä–∞–±–æ—Ç–µ" : "–ó–∞–∫—Ä—ã—Ç–æ")
        </span>
    </h1>

    <form action="api/v1.0/status"
          method="post" class="form-inline" data-ajax="true"
          data-ajax-method="POST" data-ajax-mode="replace">
        <div class="btn-group btn-group-toggle" data-toggle="buttons" style="margin-top: 20px;">
            <div class="row">
                @foreach (var status in Enum.GetValues(typeof(StoreStatus)))
                {
                    var isActive = status.Equals(Model.Store.Status);
                    var buttonClass = isActive ? "btn-secondary" : "btn-primary";
                    <div class="col-md-4">
                        <input type="radio" class="btn @buttonClass" style="margin: 10px" name="status"
                               value="@status" id="@status.ToString().ToLower()" @(isActive ? "checked" : "")>
                        <label class="btn @buttonClass" for="@status.ToString().ToLower()">@status</label>
                    </div>
                }
            </div>

            <button type="submit" class="btn btn-primary" style="background-color: transparent; color: inherit; border: none; padding: 0;">
                <span style="font-size: 2rem;">üîÑÔ∏è</span>
            </button>
            <div id="status-area"></div>
        </div>
    </form>
</div>


<script src="https://ajax.aspnetcdn.com/ajax/jquery/jquery-3.5.1.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-ajax-unobtrusive/3.2.6/jquery.unobtrusive-ajax.min.js"></script>
<script src="https://kit.fontawesome.com/your-fontawesome-kit-id.js" crossorigin="anonymous"></script>
<script>
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –º–∞–≥–∞–∑–∏–Ω–∞ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
    $(document).on("ajaxComplete", function (event, xhr, settings) {
        if (xhr.status === 200 && settings.type === 'POST') {
            var status = xhr.responseJSON;
            var statusElement = $('#store-status');
            var statusText = status === '@(((int)Model.Store.Status).ToString())' ? '–í —Ä–∞–±–æ—Ç–µ' : '–ó–∞–∫—Ä—ã—Ç–æ';
            var badgeClass = status === '@(((int)Model.Store.Status).ToString())' ? 'success' : 'danger';

            statusElement.text(statusText);
            statusElement.removeClass().addClass('badge badge-' + badgeClass);

            // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
            showSuccessMessage();
        } else if (xhr.status === 400 && settings.type === 'POST') {
            var errorMessage = xhr.responseText; // Get the text response

            // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            showErrorMessage(errorMessage);
        }
    });
</script>

<style>
    .container {
        max-width: 800px;
        margin: 40px auto;
        padding: 20px;
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .store-info {
        text-align: left;
    }

    .form-label {
        font-weight: bold;
    }

    .btn-primary {
        background-color: #FFC300; /* –û—Å–Ω–æ–≤–Ω–æ–π —Ü–≤–µ—Ç —à–∞–≤–µ—Ä–º—ã */
        border: none;
        border-radius: 5px;
        color: #fff;
    }

    .btn-primary:hover {
        background-color: #E6A700; /* –ë–æ–ª–µ–µ —Ç–µ–º–Ω—ã–π –æ—Ç—Ç–µ–Ω–æ–∫ –∂–µ–ª—Ç–æ–≥–æ */
    }

    .btn-secondary {
        background-color: #f0f0f0; /* –°–µ—Ä—ã–π –¥–ª—è –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏ */
        border: none;
        border-radius: 5px;
        color: #333;
    }

    .btn-secondary:hover {
        background-color: #ddd;
    }

    .btn-success {
        background-color: #4CAF50; /* –ó–µ–ª–µ–Ω—ã–π —Ü–≤–µ—Ç –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–û–±–Ω–æ–≤–∏—Ç—å" */
        border: none;
        border-radius: 5px;
        color: #fff;
    }

    .btn-success:hover {
        background-color: #45a049;
    }

    .shawarma-smiley {
        font-size: 100px;
        color: #ffb61e;
        margin-bottom: 10px;
    }

    .mt-4 {
        margin-top: 2rem;
    }

    #success-message,
    #error-message {
        position: fixed;
        top: 20px; /* Adjust vertical position */
        right: 20px; /*  Move to right corner */
        transform: translate(0, 0); /* Reset transform for positioning */
        z-index: 100;
        width: 300px;
        padding: 15px;
        border-radius: 5px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* –¢–µ–∫—Å—Ç—É—Ä–∞, –∫–∞–∫ —É –∫–Ω–æ–ø–æ–∫ */
        background-color: #fff; /* –ë–µ–ª—ã–π —Ñ–æ–Ω */
        color: #333; /* –ß–µ—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç */
    }

    #error-details {
        margin-top: 10px;
    }

    .btn-group {
        margin-top: 20px; /* –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç –≤–µ—Ä—Ö–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ */
    }

    .btn-group .col-md-4 {
        padding: 0 10px; /* –û—Ç—Å—Ç—É–ø –º–µ–∂–¥—É –∫–Ω–æ–ø–∫–∞–º–∏ */
    }

    .btn-success {
        padding: 5px 10px; /* –£–º–µ–Ω—å—à–µ–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä */
    }

    .btn-success i {
        font-size: 1.2rem; /* –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Å–º–∞–π–ª–∏–∫–∞ */
    }
</style>